{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure Machine Learning workspace."
            },
            "defaultValue": "mnarkdev2"
        },
        "computeVmSize": {
            "defaultValue": "Standard_DS3_V2",
            "type": "String",
            "metadata": {
                "description": "Specifies the SKU size for interactive and remote compute."
            }
        },
        "Environment": {
            "type": "string",
            "defaultValue": "AzureML-Minimal"
        },
        "Command": {
            "defaultValue": [
                "python", "train.py"
            ],
            "type": "Array",
            "metadata": {
                "description": "Start up command in code job."
            }
        },
        "jobTags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Optional : Provide JSON object with 'key,value' pairs to add as tags on dataset. Example- {\"sampleTag1\": \"tagValue1\", \"sampleTag2\": \"tagValue2\"}"
            }
        },
        "jobName": {
            "type": "string",
            "metadata": {
                "description": "Name of job."
            },
            "defaultValue": "command1"
        },
        "keyVaultName": {
            "defaultValue": "[concat('kva', uniqueString(parameters('workspaceName')))]",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure keyvault to create."
            }
        },
        "storageAccountName": {
            "defaultValue": "[concat('storagea', uniqueString(parameters('workspaceName')))]",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure storage account to create."
            }
        },
        "applicationInsightsName": {
            "defaultValue": "[concat('aia', uniqueString(parameters('workspaceName')))]",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Azure app insights account to create."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Specifies the SKU size for interactive and remote compute."
            }
        },
        "computeName": {
            "type": "string",
            "metadata": {
                "description": "The compute you want this job to run on"
            },
            "defaultValue": "cpucluster"
        }
    },
    "variables": {
        "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "keyVaultResourceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "appInsightsResourceId": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "accessPolicies": []
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('applicationInsightsName')]",
            "location": "[if(or(equals(parameters('location'),'eastus2'), equals(parameters('location'),'centraluseuap')),'southcentralus',parameters('location'))]",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2020-03-01",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('applicationInsightsName')]",
                "[parameters('keyVaultName')]",
                "[parameters('storageAccountName')]"
            ],
            "sku": {
                "tier": "enterprise",
                "name": "enterprise"
            },
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "friendlyName": "[parameters('workspaceName')]",
                "storageAccount": "[variables('storageAccountResourceId')]",
                "keyVault": "[variables('keyVaultResourceId')]",
                "applicationInsights": "[variables('appInsightsResourceId')]"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces/computes",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('workspaceName'), '/', parameters('computeName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('workspaceName')]"
            ],
            "properties": {
                "computeType": "AmlCompute",
                "properties": {
                    "vmSize": "[parameters('computeVmSize')]",
                    "scaleSettings": {
                        "minNodeCount": "0",
                        "maxNodeCount": "4"
                    }
                }
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces/jobs",
            "name": "[concat(parameters('workspaceName'), '/', parameters('jobName'))]",
            "apiVersion": "2020-09-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('workspaceName')]",
                "[parameters('computeName')]"
            ],
            "properties": {
                "jobType": "Command",
                "environmentId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.MachineLearningServices/Environments/', parameters('Environment'))]",
                "computeBinding": {
                    "computeId": "[parameters('computeName')]",
                    "nodeCount": "1"
                },
                "codeConfiguration": {
                    "codeArtifactId": "/subscriptions/5f08d643-1910-4a38-a7c7-84a39d4f42e0/resourceGroups/mnarkdev/providers/Microsoft.MachineLearningServices/workspaces/mnarkdev2/codes/a6aeadf2-cb85-4331-a2b9-cc65e6ea510e/versions/1",
                    "Command": "[parameters('Command')]"
                },
                "Tags": "[parameters('jobTags')]",
                "DistributionConfiguration": {
                    "DistributionType": "Tensorflow",
                    "WorkerCount": "2",
                    "ParameterServerCount": "1"
                }
            }
        }
    ]
}
